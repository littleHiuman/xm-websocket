import {
  __commonJS
} from "./chunk-FAW2VN4A.js";

// node_modules/xm-fns/dist/main.js
var require_main = __commonJS({
  "node_modules/xm-fns/dist/main.js"(exports, module) {
    !function(e, t) {
      typeof exports == "object" && typeof module != "undefined" ? module.exports = t() : typeof define == "function" && define.amd ? define(t) : (e = typeof globalThis != "undefined" ? globalThis : e || self).xmUtils = t();
    }(exports, function() {
      "use strict";
      function e(e2) {
        if (t(e2) !== "Object")
          return a("filterNumberKeys");
        const r2 = {};
        for (const t2 in e2)
          if (Object.hasOwnProperty.call(e2, t2) && Number.isNaN(+t2)) {
            const n2 = e2[t2];
            r2[t2] = n2;
          }
        return r2;
      }
      function t(e2) {
        const t2 = Object.prototype.toString.call(e2);
        return t2.slice(8, t2.length - 1);
      }
      function r(e2, t2, r2) {
        let n2 = e2.getMonth() + 1;
        n2 = n2 < 10 ? `0${n2}` : n2;
        let i2 = e2.getDate();
        i2 = i2 < 10 ? `0${i2}` : i2;
        const o2 = e2.getDay();
        let a2 = ["\u5468\u65E5", "\u5468\u4E00", "\u5468\u4E8C", "\u5468\u4E09", "\u5468\u56DB", "\u5468\u4E94", "\u5468\u516D"][o2];
        return r2 && t2 === o2 && (a2 = "\u4ECA\u65E5"), { date: `${n2}/${i2}`, week: a2 };
      }
      function n(e2, r2, n2) {
        if (t(e2) !== "String" && t(e2) !== "Number")
          return a("fillStr");
        if (t(r2) !== "Number")
          return a("fillStr");
        if (t(n2) !== "String" && t(n2) !== "Number")
          return a("fillStr");
        const i2 = (e2 = `${e2}`).length;
        if (i2 >= r2)
          return e2;
        const o2 = r2 - i2;
        return `${n2}`.repeat(o2) + e2;
      }
      function i(e2, r2) {
        return t(e2) !== "String" && t(e2) !== "Number" || t(r2) !== "Number" ? a("fillZero") : n(e2, r2, 0);
      }
      var o = { filterNumberKeys: e, capitalizedFirstLetter: function(e2) {
        return t(e2) !== "String" ? a("capitalizedFirstLetter") : /^[a-zA-Z\s]+$/g.test(e2) ? e2.slice(0, 1).toUpperCase() + e2.slice(1) : a("capitalizedFirstLetter");
      }, percentNum: function(e2, r2, n2 = 1) {
        return t(e2) !== "Number" || t(r2) !== "Number" || [0, 1].indexOf(n2) === -1 ? a("percentNum") : e2 === 0 || r2 === 0 ? n2 == 0 ? "0%" : "0.00%" : n2 === 0 ? `${Math.round(e2 / r2 * 100)}%` : `${(Math.round(e2 / r2 * 1e4) / 100).toFixed(2)}%`;
      }, variableType: t, uniqueArray: function(e2) {
        return t(e2) !== "Array" ? a("uniqueArray") : e2.length === 0 ? e2 : [...new Set(e2)];
      }, uniqueComplexArray: function(e2, r2, n2 = 1) {
        if (t(e2) !== "Array")
          return a("uniqueComplexArray");
        if (t(r2) !== "String")
          return a("uniqueComplexArray");
        if ([0, 1].indexOf(n2) === -1)
          return a("uniqueComplexArray");
        if (e2.length === 0)
          return e2;
        n2 === 0 && (e2 = e2.reverse());
        const i2 = /* @__PURE__ */ new Map(), o2 = e2.filter((e3) => !i2.has(e3[r2]) && i2.set(e3[r2], 1));
        return n2 === 0 ? o2.reverse() : o2;
      }, randomNums: function(e2 = {}) {
        const { min: r2 = 2, max: n2 = 32 } = e2;
        let { length: i2 = 5 } = e2;
        if (t(i2) !== "Number" || t(r2) !== "Number" || t(n2) !== "Number")
          return a("randomNums");
        if (i2 <= 0 || n2 <= r2)
          return a("randomNums");
        n2 - r2 < i2 && (i2 = n2 - r2 + 1);
        const o2 = [];
        for (let e3 = i2; e3 > 0; e3--) {
          const e4 = Math.round(Math.random() * (n2 - r2)) + r2;
          o2.includes(e4) || o2.push(e4);
        }
        return o2;
      }, getMinNMax: function(e2) {
        if (t(e2) !== "Array")
          return a("getMinNMax");
        if (e2.length === 0)
          return;
        let r2 = e2[0], n2 = e2[0];
        for (let t2 = 1; t2 < e2.length; t2++)
          r2 > e2[t2] && (r2 = e2[t2]), n2 < e2[t2] && (n2 = e2[t2]);
        return { min: r2, max: n2 };
      }, flatArray: function(e2) {
        return t(e2) !== "Array" ? a("flatArray") : e2.length === 0 ? e2 : Array.prototype.flat.call(e2, 1 / 0);
      }, getWeekDate: function(e2 = -1, t2 = false) {
        if ([-1, 0].indexOf(e2) === -1)
          return a("getWeekDate");
        if (typeof t2 != "boolean")
          return a("getWeekDate");
        const n2 = new Date(), i2 = n2.getDate(), o2 = n2.getDay();
        let l2, u2;
        const s2 = [];
        for (e2 === 0 && o2 === 0 || e2 === -1 ? u2 = 0 : e2 == 0 && o2 !== 0 && (u2 = -o2), l2 = u2; l2 <= 6 + u2; l2++) {
          const e3 = new Date();
          e3.setDate(i2 + l2), s2.push(r(e3, o2, t2));
        }
        return s2;
      }, formatDate: function(e2, t2 = "YYYY-MM-DD") {
        if (!(e2 instanceof Date))
          return a("formatDate");
        const r2 = function(e3) {
          const t3 = { Y: [2, 4], M: [1, 2], D: [1, 2], H: [1, 2], h: [1, 2], m: [1, 2], s: [1, 2] }, r3 = e3.match(/[a-zA-Z]+/g);
          if (!r3)
            return;
          const n2 = e3.match(/[Hh]+/g);
          if (n2 && n2.length == 2)
            return;
          for (const e4 of r3) {
            const r4 = e4[0], n3 = e4.length;
            if (!t3[r4] || !t3[r4].includes(n3))
              return;
            if (r4.repeat(n3) != e4)
              return;
          }
          const i2 = e3.match(/[^a-zA-Z]/g);
          if (!i2)
            return;
          if (i2.length + 1 != r3.length)
            return;
          return { formatSign: r3, formatSplit: i2 };
        }(t2);
        return r2 ? function(e3, t3) {
          const { formatSign: r3, formatSplit: n2 } = t3;
          let o2 = 0, a2 = "";
          const l2 = e3.getFullYear(), u2 = e3.getMonth() + 1, s2 = e3.getDate(), F2 = e3.getHours(), c2 = e3.getMinutes(), f2 = e3.getSeconds(), g2 = { Y: l2, M: u2, D: s2, H: F2, h: F2 > 12 ? F2 - 12 : F2, m: c2, s: f2 };
          for (const e4 of r3) {
            const t4 = e4[0], r4 = e4.length, l3 = g2[t4];
            a2 += t4 == "Y" && r4 == 2 ? `${l3}`.slice(-2) : r4 == 2 ? i(l3, 2) : l3, o2 < n2.length && (a2 += n2[o2++]);
          }
          return a2;
        }(e2, r2) : a("formatDate");
      }, fillStr: n, debounce: function(e2, t2) {
        let r2 = null;
        return function(...n2) {
          clearTimeout(r2), r2 = setTimeout(() => {
            e2.apply(this, n2);
          }, t2);
        };
      }, throttle: function(e2, t2) {
        let r2 = true;
        return function(...n2) {
          r2 && (r2 = false, setTimeout(() => {
            e2.apply(this, n2), r2 = true;
          }, t2));
        };
      } };
      function a(e2) {
        if (t(e2) !== "String")
          throw new Error("functionName\u9519\u8BEF");
        if (!/^[a-zA-Z]+$/g.test(e2))
          throw new Error("functionName\u9519\u8BEF");
        throw new Error(`${e2}: \u53C2\u6570\u9519\u8BEF`);
      }
      const l = { lightpink: "#FFB6C1", pink: "#FFC0CB", crimson: "#DC143C", lavenderblush: "#FFF0F5", palevioletred: "#DB7093", hotpink: "#FF69B4", deeppink: "#FF1493", mediumvioletred: "#C71585", orchid: "#DA70D6", thistle: "#D8BFD8", plum: "#DDA0DD", violet: "#EE82EE", magenta: "#FF00FF", fuchsia: "#FF00FF", darkmagenta: "#8B008B", purple: "#800080", mediumorchid: "#BA55D3", darkvoilet: "#9400D3", darkorchid: "#9932CC", indigo: "#4B0082", blueviolet: "#8A2BE2", mediumpurple: "#9370DB", mediumslateblue: "#7B68EE", slateblue: "#6A5ACD", darkslateblue: "#483D8B", lavender: "#E6E6FA", ghostwhite: "#F8F8FF", blue: "#0000FF", mediumblue: "#0000CD", midnightblue: "#191970", darkblue: "#00008B", navy: "#000080", royalblue: "#4169E1", cornflowerblue: "#6495ED", lightsteelblue: "#B0C4DE", lightslategray: "#778899", slategray: "#708090", doderblue: "#1E90FF", aliceblue: "#F0F8FF", steelblue: "#4682B4", lightskyblue: "#87CEFA", skyblue: "#87CEEB", deepskyblue: "#00BFFF", lightblue: "#ADD8E6", powderblue: "#B0E0E6", cadetblue: "#5F9EA0", azure: "#F0FFFF", lightcyan: "#E1FFFF", paleturquoise: "#AFEEEE", cyan: "#00FFFF", aqua: "#D4F2E7", darkturquoise: "#00CED1", darkslategray: "#2F4F4F", darkcyan: "#008B8B", teal: "#008080", mediumturquoise: "#48D1CC", lightseagreen: "#20B2AA", turquoise: "#40E0D0", auqamarin: "#7FFFAA", mediumaquamarine: "#00FA9A", mediumspringgreen: "#00FF7F", mintcream: "#F5FFFA", springgreen: "#3CB371", seagreen: "#2E8B57", honeydew: "#F0FFF0", lightgreen: "#90EE90", palegreen: "#98FB98", darkseagreen: "#8FBC8F", limegreen: "#32CD32", lime: "#00FF00", forestgreen: "#228B22", green: "#008000", darkgreen: "#006400", chartreuse: "#7FFF00", lawngreen: "#7CFC00", greenyellow: "#ADFF2F", olivedrab: "#556B2F", beige: "#F5F5DC", lightgoldenrodyellow: "#FAFAD2", ivory: "#FFFFF0", lightyellow: "#FFFFE0", yellow: "#FFFF00", olive: "#808000", darkkhaki: "#BDB76B", lemonchiffon: "#FFFACD", palegodenrod: "#EEE8AA", khaki: "#F0E68C", gold: "#FFD700", cornislk: "#FFF8DC", goldenrod: "#DAA520", floralwhite: "#FFFAF0", oldlace: "#FDF5E6", wheat: "#F5DEB3", moccasin: "#FFE4B5", orange: "#FFA500", papayawhip: "#FFEFD5", blanchedalmond: "#FFEBCD", navajowhite: "#FFDEAD", antiquewhite: "#FAEBD7", tan: "#D2B48C", brulywood: "#DEB887", bisque: "#FFE4C4", darkorange: "#FF8C00", linen: "#FAF0E6", peru: "#CD853F", peachpuff: "#FFDAB9", sandybrown: "#F4A460", chocolate: "#D2691E", saddlebrown: "#8B4513", seashell: "#FFF5EE", sienna: "#A0522D", lightsalmon: "#FFA07A", coral: "#FF7F50", orangered: "#FF4500", darksalmon: "#E9967A", tomato: "#FF6347", mistyrose: "#FFE4E1", salmon: "#FA8072", snow: "#FFFAFA", lightcoral: "#F08080", rosybrown: "#BC8F8F", indianred: "#CD5C5C", red: "#FF0000", brown: "#A52A2A", firebrick: "#B22222", darkred: "#8B0000", maroon: "#800000", white: "#FFFFFF", whitesmoke: "#F5F5F5", gainsboro: "#DCDCDC", lightgrey: "#D3D3D3", silver: "#C0C0C0", darkgray: "#A9A9A9", gray: "#808080", dimgray: "#696969", black: "#000000" };
      function u(e2) {
        return e2 = e2.trim().toLowerCase(), !!l[e2];
      }
      function s(e2) {
        return u(e2 = e2.trim().toLowerCase()) ? p(l[e2]) : a("RGB2HEX");
      }
      function F(e2) {
        return u(e2 = e2.trim().toLowerCase()) ? l[e2] : a("RGB2HEX");
      }
      function c(e2) {
        return e2 = e2.trim().replace(/ /g, ""), /^rgb\(\d{1,3}\,\d{1,3}\,\d{1,3}\)$/g.test(e2);
      }
      function f(e2) {
        return g(e2) || m(e2);
      }
      function g(e2) {
        return e2 = e2.trim(), /^#[0-9a-zA-Z]{3}$/g.test(e2);
      }
      function m(e2) {
        return e2 = e2.trim(), /^#[0-9a-zA-Z]{6}$/g.test(e2);
      }
      function d(e2) {
        if (c(e2 = e2.trim().replace(/ /g, ""))) {
          const t2 = e2.slice(4, -1).split(",");
          for (const e3 in t2)
            if (Object.hasOwnProperty.call(t2, e3)) {
              const r2 = t2[e3];
              t2[e3] = (r2 - 0).toString(16);
            }
          return `#${t2.join("").toUpperCase()}`;
        }
        return a("RGB2HEX");
      }
      function p(e2) {
        if (g(e2 = e2.trim())) {
          const t2 = e2.slice(1, 2), r2 = e2.slice(2, 3), n2 = e2.slice(3, 4);
          return `rgb(${`${Number.parseInt(t2 + t2, 16)},${Number.parseInt(r2 + r2, 16)},${Number.parseInt(n2 + n2, 16)}`})`;
        }
        if (m(e2)) {
          const t2 = e2.slice(1, 3), r2 = e2.slice(3, 5), n2 = e2.slice(5, 7);
          return `rgb(${`${Number.parseInt(t2, 16)},${Number.parseInt(r2, 16)},${Number.parseInt(n2, 16)}`})`;
        }
        return a("HEX2RGB");
      }
      function h(e2) {
        const t2 = e2.trim();
        if (g(t2)) {
          const e3 = t2.slice(1, 2), r2 = t2.slice(2, 3), n2 = t2.slice(3, 4);
          return `#${e3 + e3 + r2 + r2 + n2 + n2}`;
        }
        return m(e2) ? e2 : a("shortHEXVal2LongHEXVal");
      }
      function D(e2, t2) {
        const r2 = {};
        for (const n2 in e2)
          if (Object.hasOwnProperty.call(e2, n2)) {
            const i2 = e2[n2], o2 = t2[n2];
            r2[n2] = !i2 && o2 ? o2 : i2 && !o2 || i2 && o2 && (o2 === "initial" || i2 === o2) ? i2 : o2;
          }
        for (const e3 in t2)
          if (Object.hasOwnProperty.call(t2, e3)) {
            const n2 = t2[e3];
            r2[e3] || (r2[e3] = n2);
          }
        return r2;
      }
      var E = { isColorVal: function(e2) {
        return c(e2) || f(e2) || u(e2);
      }, isStringColorVal: u, stringColor2RGB: s, stringColor2HEX: F, isRGBVal: c, isHEXVal: f, isShortHEXVal: g, isLongHEXVal: m, RGB2HEX: d, HEX2RGB: p, shortHEXVal2LongHEXVal: h, eqColorVal: function(e2, t2) {
        return e2 = e2.trim(), t2 = t2.trim(), c(e2) && c(t2) ? function(e3, t3) {
          return e3 = e3.trim(), t3 = t3.trim(), c(e3) && c(t3) ? e3.replace(/ /g, "") == t3.replace(/ /g, "") : a("eqRGBVal");
        }(e2, t2) : f(e2) && f(t2) ? function(e3, t3) {
          return e3 = e3.trim(), t3 = t3.trim(), f(e3) && f(t3) ? h(e3).toUpperCase() == h(t3).toUpperCase() : a("eqHEXVal");
        }(e2, t2) : u(e2) && u(t2) ? function(e3, t3) {
          return e3 = e3.trim(), t3 = t3.trim(), u(e3) && u(t3) ? e3.toLowerCase() == t3.toLowerCase() : a("eqStringColorVal");
        }(e2, t2) : c(e2) && f(t2) || f(e2) && c(t2) ? function(e3, t3) {
          return c(e3) && f(t3) ? h(d(e3)) == h(t3).toUpperCase() : f(e3) && c(t3) ? h(d(t3)) == h(e3).toUpperCase() : a("eqRGBNHEX");
        }(e2, t2) : u(e2) && !u(t2) || !u(e2) && u(t2) ? function(e3, t3) {
          return u(e3) && c(t3) ? s(e3) == t3.replace(/ /g, "") : u(e3) && f(t3) ? F(e3).toUpperCase() == h(t3).toUpperCase() : u(t3) && c(e3) ? s(t3) == e3.replace(/ /g, "") : u(t3) && f(e3) ? F(t3).toUpperCase() == h(e3).toUpperCase() : a("eqStringColorValNOther");
        }(e2, t2) : a("eqColorVal");
      }, assignCssObj: D, getCSSStyle: function(t2) {
        return t2 instanceof window.HTMLElement ? D(e(window.getComputedStyle(t2)), e(t2.style)) : a("getCSSStyle");
      } };
      return Object.assign({}, E, o);
    });
  }
});

// dep:xm-fns
var xm_fns_default = require_main();
export {
  xm_fns_default as default
};
//# sourceMappingURL=xm-fns.js.map
